{"version":3,"sources":["components/Game_play_panel/Game_play_panel.js","components/Game_score_panel/Game_score_panel.js","components/Game/Game.js","components/App/App.js","serviceWorker.js","index.js"],"names":["GamePlayPanel","_this","this","react_default","a","createElement","react","className","props","itemsArray","map","item","index","concat","key","onClick","collectItem","id","Component","GameScorePanel","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","score","qty","points","bonus","total","newGame","Game","createItemsArray","items","itemArrayLength","itemsAr","i","x","Math","floor","random","length","push","collectedItems","setState","itemArr","filter","ite","toConsumableArray","unitPoints","console","log","includes","localScore","playersItem","window","location","reload","_this2","Game_play_panel_Game_play_panel","Game_score_panel_Game_score_panel","App","components_Game_Game","Boolean","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4TA8BeA,0LAvBF,IAAAC,EAAAC,KACL,OACIC,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACIH,EAAAC,EAAAC,cAAA,WAASE,UAAU,6BACfJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,2BACdJ,EAAAC,EAAAC,cAAA,qBADJ,IACqBF,EAAAC,EAAAC,cAAA,oBAErBF,EAAAC,EAAAC,cAAA,QAAME,UAAU,yBAEVL,KAAKM,MAAMC,WAAWC,IAAI,SAACC,EAAMC,GAC/B,OACIT,EAAAC,EAAAC,cAAA,OAAKE,UAAS,QAAAM,OAAUF,EAAKA,MAAQG,IAAMF,EAAQG,QAAU,kBAAMd,EAAKO,MAAMQ,YAAYJ,EAAOD,IAAQM,GAAKL,GACxGD,EAAKA,kBAdfO,cC8CbC,qBA9CX,SAAAA,EAAYX,GAAO,IAAAP,EAAA,OAAAmB,OAAAC,EAAA,EAAAD,CAAAlB,KAAAiB,IACflB,EAAAmB,OAAAE,EAAA,EAAAF,CAAAlB,KAAAkB,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAtB,KAAMM,KACDiB,MAAQ,GAFExB,wEASf,OACIE,EAAAC,EAAAC,cAAA,WAASE,UAAU,8BACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4BAAf,iBAGAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gCACXJ,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,mBAEJF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAETL,KAAKM,MAAMkB,MAAMhB,IAAI,SAACC,EAAMC,GAC1B,OACIT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiBO,IAAMF,GAClCT,EAAAC,EAAAC,cAAA,OAAKE,UAAS,wBAAAM,OAA4BF,EAAKA,OACzCA,EAAKA,MAEXR,EAAAC,EAAAC,cAAA,KAAGE,UAAU,6BAAb,IAA4CI,EAAKgB,IAAjD,KACAxB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,0BAAb,IAAyCI,EAAKiB,OAA9C,SAMhBzB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BAAf,UACWJ,EAAAC,EAAAC,cAAA,QAAMY,GAAG,iBAAT,IAA4Bf,KAAKM,MAAMqB,MAAvC,MAEX1B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iCACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SAAf,UAA8BJ,EAAAC,EAAAC,cAAA,QAAMY,GAAG,eAAT,IAA0Bf,KAAKM,MAAMsB,MAArC,MAC9B3B,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eAAeQ,QAAUb,KAAKM,MAAMuB,SAAtD,qBAzCSb,cCuGdc,qBAnGX,SAAAA,EAAYxB,GAAO,IAAAP,EAAA,OAAAmB,OAAAC,EAAA,EAAAD,CAAAlB,KAAA8B,IACf/B,EAAAmB,OAAAE,EAAA,EAAAF,CAAAlB,KAAAkB,OAAAG,EAAA,EAAAH,CAAAY,GAAAR,KAAAtB,KAAMM,KAiBVyB,iBAAmB,SAACC,EAAOC,GAEvB,IADA,IAAIC,EAAU,GACLC,EAAI,EAAGA,EAAIF,EAAiBE,IAAK,CACtC,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,SAAYP,EAAMQ,QAC1CN,EAAQO,KAAKT,EAAMI,IAEvB,OAAOF,GAtBPnC,EAAKwB,MAAQ,CACTS,MAAOjC,EAAKO,MAAM0B,MAClBzB,WAAY,GACZmC,eAAgB,GAChBlB,MAAO,GACPG,MAAO,EACPC,MAAO,GARI7B,oFAafC,KAAK2C,SAAS,CACVpC,WAAYP,KAAK+B,iBAAiB/B,KAAKuB,MAAMS,MAAO,0CAahDtB,EAAOD,GACf,IAAMmC,EAAU5C,KAAKuB,MAAMhB,WAAWsC,OAAO,SAACC,EAAKX,GAAN,OAAYA,IAAMzB,IAE/DV,KAAKwB,MAAMxB,KAAKuB,MAAMmB,eAAgBjC,GAEtCT,KAAK2C,SAAS,CACVD,eAAc,GAAA/B,OAAAO,OAAA6B,EAAA,EAAA7B,CAAMlB,KAAKuB,MAAMmB,gBAAjB,CAAiCjC,IAC/CF,WAAYqC,EACZhB,MAAO5B,KAAKuB,MAAMK,MAAQnB,EAAKuC,aAGnCC,QAAQC,IAAIlD,KAAKuB,MAAMC,qCAGrBkB,EAAgBjC,GAElB,GAAKiC,EAAeS,SAAS1C,GAUtB,CAIH,IAHA,IAAI2C,EAAapD,KAAKuB,MAAMC,MACxBG,EAAQ3B,KAAKuB,MAAMI,MAEdQ,EAAI,EAAGA,EAAIiB,EAAWZ,OAAQL,IAC/BiB,EAAWjB,GAAG1B,OAASA,EAAKA,OAC5B2C,EAAWjB,GAAGV,KAAO,EACrB2B,EAAWjB,GAAGT,QAAU0B,EAAWjB,GAAGa,WACX,MAAvBI,EAAWjB,GAAG1B,MAAgB2C,EAAWjB,GAAGV,IAAM,IAAM,IACxDE,GAASlB,EAAKuC,WACdI,EAAWjB,GAAGT,QAAUjB,EAAKuC,WAC7BhD,KAAK2C,SAAS,CACVf,MAAO5B,KAAKuB,MAAMK,OAASnB,EAAKuC,cAGb,MAAvBI,EAAWjB,GAAG1B,MAAgB2C,EAAWjB,GAAGV,IAAM,IAAM,IACxDE,GAASlB,EAAKuC,WACdI,EAAWjB,GAAGT,QAAUjB,EAAKuC,WAC7BhD,KAAK2C,SAAS,CACVf,MAAO5B,KAAKuB,MAAMK,OAASnB,EAAKuC,eAMhDhD,KAAK2C,SAAS,CACVnB,MAAMN,OAAA6B,EAAA,EAAA7B,CAAKkC,GACXzB,MAAOA,QArCqB,CAChC,IAAI0B,EAAc,CACd5C,KAAMA,EAAKA,KACXgB,IAAK,EACLuB,WAAYvC,EAAKuC,WACjBtB,OAAQjB,EAAKuC,YAElBhD,KAAK2C,SAAS,CACVnB,MAAK,CAAI6B,GAAJ1C,OAAAO,OAAA6B,EAAA,EAAA7B,CAAoBlB,KAAKuB,MAAMC,6CAmC3C8B,OAAOC,SAASC,0CAGX,IAAAC,EAAAzD,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAACuD,EAAD,CAAenD,WAAaP,KAAKuB,MAAMhB,WAAamC,eAAiB1C,KAAKuB,MAAMmB,eAAiB5B,YAAc,SAACJ,EAAOD,GAAR,OAAiBgD,EAAK3C,YAAYJ,EAAOD,MACxJR,EAAAC,EAAAC,cAACwD,EAAD,CAAgBjB,eAAiB1C,KAAKuB,MAAMmB,eAAiBlB,MAAQxB,KAAKuB,MAAMC,MAAQI,MAAQ5B,KAAKuB,MAAMK,MAAQD,MAAQ3B,KAAKuB,MAAMI,MAAQE,QAAU7B,KAAK6B,kBA/F1Jb,cCDbgB,SAAQ,CAAC,CACbvB,KAAM,IACNuC,WAAY,IAEZ,CACEvC,KAAM,IACNuC,WAAY,IAEd,CACEvC,KAAM,IACNuC,WAAY,IAEd,CACEvC,KAAM,IACNuC,WAAY,MAYDY,mLALX,OACM3D,EAAAC,EAAAC,cAAC0D,EAAD,CAAMxD,UAAU,iBAAiB2B,MAAQA,WAJjChB,aCVE8C,QACW,cAA7BR,OAAOC,SAASQ,UAEe,UAA7BT,OAAOC,SAASQ,UAEhBT,OAAOC,SAASQ,SAASC,MACvB,2DCZNC,IAASC,OAAOjE,EAAAC,EAAAC,cAACgE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.8a78915e.chunk.js","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport './Game_play_panel.scss';\n\n\n\nclass GamePlayPanel extends Component {\n\n    render() {\n        return (\n            <Fragment>\n                <section className='main_game_panel_container'>\n                    <header className='main_game_panel__header'>\n                        <h1>Kahoot!</h1> <p>POINTS</p>\n                    </header>\n                    <main className='main_game_panel__body'>\n\n                        { this.props.itemsArray.map((item, index) => {\n                            return (\n                                <div className={`item ${item.item}`} key={ index } onClick={ () => this.props.collectItem(index, item) } id={ index }>\n                                    { item.item }\n                                </div>\n                            )\n                        }) }\n                    </main>\n                </section>\n            </Fragment>\n        );\n    }\n}\n\nexport default GamePlayPanel;\n","import React, { Component } from 'react';\nimport './Game_score_panel.scss';\n\nclass GameScorePanel extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n\n    render() {\n        return (\n            <section className='score_game_panel_container'>\n                <div className=\"score_game_panel__header\">\n                    Players Items\n                </div>\n                <div className=\"main_game_panel__body_header\">\n                    <p>item</p>\n                    <p>qty</p>\n                    <p>score</p>\n                </div>\n                <div className='score_game_panel__body'>\n\n                    { this.props.score.map((item, index) => {\n                        return (\n                            <div className=\"collected_item\" key={ index }>\n                                <div className={`collected_item__icon ${  item.item }`}>\n                                    { item.item }\n                                </div>\n                                <p className=\"collected_items__quantity\"> { item.qty } </p>\n                                <p className=\"collected_items__score\"> { item.points } </p>\n                            </div>\n                        )\n                    }) }\n\n                </div>\n                <div className='score_game_panel__bonus'>\n                    Bonus: <span id='players_bonus'> { this.props.bonus } </span>\n                </div>\n                <div className=\"score_game_panel__resume_game\">\n                    <div className=\"total\">Total: <span id='total_score'> { this.props.total } </span></div>\n                    <button className='new_game_btn' onClick={ this.props.newGame }>New Game</button>\n                </div>\n            </section>\n        );\n    }\n}\n\nexport default GameScorePanel;\n","import React, { Component } from 'react';\nimport GamePlayPanel from '../Game_play_panel/Game_play_panel';\nimport GameScorePanel from '../Game_score_panel/Game_score_panel';\nimport './Game.scss';\n\nclass Game extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: this.props.items,\n            itemsArray: [],\n            collectedItems: [],\n            score: [],\n            bonus: 0,\n            total: 0\n        };\n    }\n\n    componentWillMount() {\n        this.setState({\n            itemsArray: this.createItemsArray(this.state.items, 15)\n        });\n    }\n\n    createItemsArray = (items, itemArrayLength) => {\n        let itemsAr = [];\n        for (let i = 0; i < itemArrayLength; i++) {\n            let x = Math.floor(Math.random() * (items.length));\n            itemsAr.push(items[x])\n        }\n        return itemsAr\n    };\n\n    collectItem(index, item) {\n        const itemArr = this.state.itemsArray.filter((ite, i) => i !== index);\n\n        this.score(this.state.collectedItems, item);\n\n        this.setState({\n            collectedItems: [...this.state.collectedItems, item],\n            itemsArray: itemArr,\n            total: this.state.total + item.unitPoints\n        });\n\n        console.log(this.state.score);\n    }\n\n    score(collectedItems, item) {\n\n        if (!collectedItems.includes(item)) {\n            let playersItem = {\n                item: item.item,\n                qty: 1,\n                unitPoints: item.unitPoints,\n                points: item.unitPoints,\n            };\n           this.setState({\n               score: [ playersItem, ...this.state.score]\n           })\n        } else {\n            let localScore = this.state.score;\n            let bonus = this.state.bonus;\n\n            for (let i = 0; i < localScore.length; i++) {\n                if (localScore[i].item === item.item) {\n                    localScore[i].qty += 1;\n                    localScore[i].points += localScore[i].unitPoints;\n                    if (localScore[i].item === 'A' && localScore[i].qty % 3 === 0) {\n                        bonus += item.unitPoints;\n                        localScore[i].points += item.unitPoints;\n                        this.setState({\n                            total: this.state.total += item.unitPoints\n                        })\n                    }\n                    if (localScore[i].item === 'B' && localScore[i].qty % 2 === 0) {\n                        bonus += item.unitPoints;\n                        localScore[i].points += item.unitPoints;\n                        this.setState({\n                            total: this.state.total += item.unitPoints\n                        })\n                    }\n                }\n            }\n\n            this.setState({\n                score: [...localScore],\n                bonus: bonus,\n            })\n        }\n    }\n\n    newGame() {\n        window.location.reload();\n    }\n\n    render() {\n        return (\n            <div className='game_container'>\n                <GamePlayPanel itemsArray={ this.state.itemsArray } collectedItems={ this.state.collectedItems } collectItem={ (index, item) => this.collectItem(index, item) } />\n                <GameScorePanel collectedItems={ this.state.collectedItems } score={ this.state.score } total={ this.state.total } bonus={ this.state.bonus } newGame={ this.newGame }/>\n            </div>\n        );\n    }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport Game from '../Game/Game';\nimport './App.scss';\n\nconst items = [{\n  item: 'A',\n  unitPoints: 50\n},\n  {\n    item: 'B',\n    unitPoints: 30\n  },\n  {\n    item: 'C',\n    unitPoints: 20\n  },\n  {\n    item: 'D',\n    unitPoints: 15\n  }\n];\n\nclass App extends Component {\n\n  render() {\n    return (\n          <Game className='game_container' items={ items }/>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}